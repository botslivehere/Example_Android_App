// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SelectedRecipeBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView Calorie;

  @NonNull
  public final TextView Difficulty;

  @NonNull
  public final TextView Time;

  @NonNull
  public final TextView recipeDescription;

  @NonNull
  public final TextView recipeTitle;

  private SelectedRecipeBinding(@NonNull ScrollView rootView, @NonNull TextView Calorie,
      @NonNull TextView Difficulty, @NonNull TextView Time, @NonNull TextView recipeDescription,
      @NonNull TextView recipeTitle) {
    this.rootView = rootView;
    this.Calorie = Calorie;
    this.Difficulty = Difficulty;
    this.Time = Time;
    this.recipeDescription = recipeDescription;
    this.recipeTitle = recipeTitle;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static SelectedRecipeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SelectedRecipeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.selected_recipe, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SelectedRecipeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Calorie;
      TextView Calorie = ViewBindings.findChildViewById(rootView, id);
      if (Calorie == null) {
        break missingId;
      }

      id = R.id.Difficulty;
      TextView Difficulty = ViewBindings.findChildViewById(rootView, id);
      if (Difficulty == null) {
        break missingId;
      }

      id = R.id.Time;
      TextView Time = ViewBindings.findChildViewById(rootView, id);
      if (Time == null) {
        break missingId;
      }

      id = R.id.recipeDescription;
      TextView recipeDescription = ViewBindings.findChildViewById(rootView, id);
      if (recipeDescription == null) {
        break missingId;
      }

      id = R.id.recipeTitle;
      TextView recipeTitle = ViewBindings.findChildViewById(rootView, id);
      if (recipeTitle == null) {
        break missingId;
      }

      return new SelectedRecipeBinding((ScrollView) rootView, Calorie, Difficulty, Time,
          recipeDescription, recipeTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
